<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.avioconsulting.mule.connector</groupId>
    <artifactId>vault-connector</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>mule-extension</packaging>
    <name>Vault Connector - Mule 4</name>

    <parent>
        <groupId>org.mule.connectors</groupId>
        <artifactId>mule-certified-parent</artifactId>
        <version>1.4.1</version>
    </parent>

    <properties>
        <muleMetadataVersion>1.1.2</muleMetadataVersion>
        <muleServicesVersion>1.1.2</muleServicesVersion>
        <mockServerVersion>5.10.0</mockServerVersion>
        <gsonVersion>2.8.6</gsonVersion>
        <mule.maven.plugin.version>3.5.2</mule.maven.plugin.version>
        <munit.input.directory>${basedir}/mule-vault-connector-munit-tests</munit.input.directory>
        <munit.output.directory>${basedir}/target/test-mule/munit</munit.output.directory>
        <munit.extensions.maven.plugin.version>1.1.2</munit.extensions.maven.plugin.version>
        <munit.version>2.3.6</munit.version>
        <mavenResourcesVersion>3.0.2</mavenResourcesVersion>
        <app.runtime>4.3.0</app.runtime>
        <testContainersVersion>1.15.3</testContainersVersion>
        <bouncyCastleVersion>1.67</bouncyCastleVersion>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.mule.tools.maven</groupId>
                <artifactId>mule-maven-plugin</artifactId>
                <version>${mule.maven.plugin.version}</version>
                <extensions>true</extensions>
                <configuration>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.mulesoft.munit</groupId>
                <artifactId>munit-extensions-maven-plugin</artifactId>
                <version>${munit.extensions.maven.plugin.version}</version>
                <configuration>
                    <runtimeVersion>${app.runtime}</runtimeVersion>
                    <runtimeConfiguration>
                        <discoverRuntimes>
                            <product>EE</product>
                            <skip>true</skip>
                        </discoverRuntimes>
                    </runtimeConfiguration>
                    <systemPropertyVariables>
                        <vault.port>${vault.port}</vault.port>
                        <proxy.port>${proxy.port}</proxy.port>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>integration-test</phase>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.mulesoft.munit</groupId>
                        <artifactId>munit-runner</artifactId>
                        <version>${munit.version}</version>
                        <classifier>mule-plugin</classifier>
                    </dependency>
                    <dependency>
                        <groupId>com.mulesoft.munit</groupId>
                        <artifactId>munit-tools</artifactId>
                        <version>${munit.version}</version>
                        <classifier>mule-plugin</classifier>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${mavenResourcesVersion}</version>
                <executions>
                    <execution>
                        <id>copy-munit-resources</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${munit.output.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${munit.input.directory}/src/main/mule</directory>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <directory>${munit.input.directory}/src/test/munit</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.20.1</version>
                <executions>
                    <execution>
                        <id>start-squid-proxy</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <images>
                                <image>
                                    <name>salrashid123/squidproxy</name>
                                    <alias>squid-proxy</alias>
                                    <run>
                                        <volumes>
                                            <bind>
                                                <volume>${basedir}/src/test/resources/container/squid:/apps/squid/custom/conf</volume>
                                            </bind>
                                        </volumes>
                                        <ports>
                                            <port>proxy.port:3128</port>
                                        </ports>
                                        <cmd>/apps/squid/sbin/squid -NsY -f /apps/squid/custom/conf/squid.conf.forward</cmd>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <execution>
                        <id>start-vault</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <images>
                                <image>
                                    <name>vault:1.4.2</name>
                                    <alias>vault</alias>
                                    <run>
                                        <capAdd>
                                            <add>IPC_LOCK</add>
                                        </capAdd>
                                        <env>
                                            <VAULT_DEV_ROOT_TOKEN_ID>test_token</VAULT_DEV_ROOT_TOKEN_ID>
                                            <VAULT_LOCAL_CONFIG>{"listener":[{"tcp":{"address":"0.0.0.0:8205", "tls_cert_file":"/vault/ca/vault-example.pem", "tls_key_file":"/vault/ca/private/vault-example-key.pem"}}], "backend": {"file": {"path": "/vault/file"}}, "default_lease_ttl": "168h", "max_lease_ttl": "720h", "ui": "true"}</VAULT_LOCAL_CONFIG>
                                        </env>
                                        <volumes>
                                            <bind>
                                                <volume>${basedir}/src/test/resources/container/cert:/vault/ca</volume>
                                                <volume>${basedir}/src/test/resources/container/config:/vault/prepare</volume>
                                            </bind>
                                        </volumes>
                                        <ports>
                                            <port>vault.port:8205</port>
                                        </ports>
                                        <wait>
                                            <http>
                                                <url>https://localhost:${vault.port}/v1/sys/health</url>
                                                <allowAllHosts>true</allowAllHosts>
                                            </http>
                                            <exec>
                                                <postStart>sh /vault/prepare/configure-tls.sh</postStart>
                                            </exec>
                                            <time>10000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-vault</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-squid-proxy</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-metadata-model-json</artifactId>
            <version>${muleMetadataVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.services</groupId>
            <artifactId>mule-service-http</artifactId>
            <version>${muleServicesVersion}</version>
            <classifier>mule-service</classifier>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.services</groupId>
            <artifactId>mule-service-scheduler</artifactId>
            <version>${muleServicesVersion}</version>
            <classifier>mule-service</classifier>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gsonVersion}</version>
            <scope>compile</scope>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${testContainersVersion}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <version>${bouncyCastleVersion}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk15on</artifactId>
            <version>${bouncyCastleVersion}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mock-server</groupId>
            <artifactId>mockserver-netty</artifactId>
            <version>${mockServerVersion}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mock-server</groupId>
            <artifactId>mockserver-junit-rule</artifactId>
            <version>${mockServerVersion}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mock-server</groupId>
            <artifactId>mockserver-client-java</artifactId>
            <version>${mockServerVersion}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.mulesoft.munit</groupId>
            <artifactId>munit-runner</artifactId>
            <version>${munit.version}</version>
            <classifier>mule-plugin</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.mulesoft.munit</groupId>
            <artifactId>munit-tools</artifactId>
            <version>${munit.version}</version>
            <classifier>mule-plugin</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.connectors</groupId>
            <artifactId>mule-http-connector</artifactId>
            <version>1.3.2</version>
            <classifier>mule-plugin</classifier>
        </dependency>
        <dependency>
            <groupId>org.mule.connectors</groupId>
            <artifactId>mule-sockets-connector</artifactId>
            <version>1.1.2</version>
            <classifier>mule-plugin</classifier>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>Central</id>
            <name>Central</name>
            <url>https://repo1.maven.org/maven2/</url>
            <layout>default</layout>
        </repository>
        <repository>
            <id>anypoint-exchange</id>
            <name>Anypoint Exchange</name>
            <url>https://maven.anypoint.mulesoft.com/api/v1/maven</url>
            <layout>default</layout>
        </repository>
        <repository>
            <id>mulesoft-releases</id>
            <name>MuleSoft Releases Repository</name>
            <url>https://repository.mulesoft.org/releases/</url>
            <layout>default</layout>
        </repository>
        <repository>
            <id>mulesoft-snapshots</id>
            <name>MuleSoft Snapshots Repository</name>
            <url>https://repository.mulesoft.org/snapshots/</url>
            <layout>default</layout>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>mulesoft-release</id>
            <name>mulesoft release repository</name>
            <layout>default</layout>
            <url>https://repository.mulesoft.org/releases/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>mulesoft-ee-releases</id>
            <name>MuleSoft EE Releases Repository</name>
            <url>https://repository.mulesoft.org/nexus-ee/content/repositories/releases-ee/</url>
            <layout>default</layout>
        </pluginRepository>
    </pluginRepositories>
</project>
